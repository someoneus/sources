--studded library lalalalalalala
--kinda made by chatgpt tbh
local lib = {}
local coregui = game:GetService("CoreGui")
local lastgui = coregui:FindFirstChild("StudLib")
local pass

if not lastgui then
    local pass = true
else
    lastgui:Destroy()
    local pass = false
end

lib.Themes = {
    Dark = {
        BackgroundColor = Color3.fromRGB(30, 30, 30),
        HeaderColor = Color3.fromRGB(50, 50, 50),
        TextColor = Color3.fromRGB(255, 255, 255)
    },
    Pale = {
        BackgroundColor = Color3.fromRGB(100, 100, 100),
        HeaderColor = Color3.fromRGB(70, 70, 70),
        TextColor = Color3.fromRGB(255, 255, 255)
    },
    Light = {
        BackgroundColor = Color3.fromRGB(200, 200, 200),
        HeaderColor = Color3.fromRGB(150, 150, 150),
        TextColor = Color3.fromRGB(40, 40, 40)
    }
}

local UserInputService = game:GetService("UserInputService")

function MakeDraggable(main)
    local dragging
    local dragInput
    local startPos
    local dragStart

    local function Update(input)
        if dragging then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end

    main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = main.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    main.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput then
            Update(input)
        end
    end)
end

--gui setting
local gui = Instance.new("ScreenGui")
gui.Name = "StudLib"
gui.ResetOnSpawn = false
gui.Parent = game:GetService("CoreGui")

--window
function lib:CreateWindow(title, theme)
    local sTheme = self.Themes[theme] or self.Themes.Dark -- Default to Dark if invalid theme



    local main = Instance.new("Frame")
    main.Visible = false
    main.Size = UDim2.new(0.4, 0, 0.5, 0)
    main.Position = UDim2.new(0.3, 0, 0.25, 0)
    main.BackgroundTransparency = 0.15
    main.BackgroundColor3 = sTheme.BackgroundColor -- Apply theme
    main.Parent = gui
    main.Name = "Main"
    
    -- Create Loading Text
    local loadingText = Instance.new("TextLabel")
    loadingText.Text = title
    loadingText.Font = Enum.Font.Nunito
    loadingText.TextSize = 30
    loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
    loadingText.BackgroundTransparency = 1
    loadingText.Position = UDim2.new(0.5, -150, 0.5, -15)
    loadingText.Size = UDim2.new(0, 300, 0, 30)
    loadingText.Parent = gui
    loadingText.TextTransparency = 1 -- Start invisible

    -- Fade In Animation
    for i = 1, 10 do
        loadingText.TextTransparency = 1 - (i * 0.1)
        wait(0.05)
        end

    -- Simulate Loading Time
    wait(5) -- Adjust based on actual loading time

    -- Fade Out Animation
    for i = 1, 10 do
        loadingText.TextTransparency = i * 0.1
        wait(0.05)
    end
    loadingText:Destroy() -- Remove the text
    main.Visible = true

    local titlebar = Instance.new("Frame")
    titlebar.Parent = main
    titlebar.Size = UDim2.new(0.9, 0, 0.1, 0)
    titlebar.Position = UDim2.new(0.05, 0, 0.05, 0)
    titlebar.BackgroundColor3 = sTheme.HeaderColor -- Apply theme

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Parent = titlebar
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Size = UDim2.new(0.85, 0, 0.75, 0)
    titleLabel.Position = UDim2.new(0.025, 0, 0.125, 0)
    titleLabel.Font = Enum.Font.Nunito
    titleLabel.TextScaled = true
    titleLabel.TextColor3 = sTheme.TextColor -- Apply theme
    titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    titleLabel.TextStrokeTransparency = 0
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title -- Use the title argument

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.25, 0)
    corner.Parent = titlebar
    corner.Name = "corner"

    -- Make Draggable
    MakeDraggable(main)

    local close = Instance.new("TextButton")
    close.Text = "X"
    close.Parent = main
    close.Size = UDim2.new(0.1, 0, 0.1, 0)
    close.Position = UDim2.new(0.93, 0, 0, 0)
    close.BackgroundTransparency = 1
    close.TextScaled = true
    close.TextColor3 = sTheme.TextColor -- Apply theme

    function closing()
        local gui = main.Parent
        if gui then
            gui:Destroy()
        end
    end
    close.MouseButton1Click:Connect(closing)
end
